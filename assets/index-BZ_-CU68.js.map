{"version":3,"file":"index-BZ_-CU68.js","sources":["../../script.js"],"sourcesContent":["// Constants and data loading\nconst width = 1920;\nconst height = 1200;\n\nlet phillyMap = d3.json(\"dist/phillyRoads.json\");\nlet phillyCSV = d3.csv(\"dist/philly_crashes.csv\");\n\nPromise.all([phillyMap, phillyCSV]).then(([phillyMap, fullCrashData]) => {\n    const phillyCenter = [-75.1652, 39.9526];\n    const scale = 200000;\n\n    const projection = d3.geoMercator()\n        .center(phillyCenter)\n        .scale(scale)\n        .translate([width / 2, height / 2]);\n\n    const path = d3.geoPath().projection(projection);\n\n    const svg = d3.select(\"#visualization\").append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .attr(\"viewBox\", `0 0 ${width} ${height}`)\n        .call(d3.zoom().on(\"zoom\", function (event) {\n            svg.attr(\"transform\", event.transform);\n        }))\n        .append(\"g\");\n\n    const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0)\n        .style(\"position\", \"absolute\")\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"1px solid black\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"10px\")\n        .style(\"pointer-events\", \"none\");\n\n    const textOverlay = d3.select(\"#visualization\")\n        .append(\"div\")\n        .attr(\"class\", \"text-overlay\")\n        .style(\"position\", \"absolute\")\n        .style(\"top\", \"20px\")\n        .style(\"left\", \"20px\")\n        .style(\"background-color\", \"rgba(255, 255, 255, 0.7)\")\n        .style(\"padding\", \"10px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"opacity\", 0);\n\n    const sliderContainer = d3.select(\"#visualization\")\n        .append(\"div\")\n        .attr(\"class\", \"slider-container\")\n        .style(\"position\", \"absolute\")\n        .style(\"bottom\", \"20px\")\n        .style(\"left\", \"20px\")\n        .style(\"width\", \"300px\")\n        .style(\"display\", \"none\");\n\n    sliderContainer.append(\"input\")\n        .attr(\"type\", \"range\")\n        .attr(\"min\", 0)\n        .attr(\"max\", 23)\n        .attr(\"value\", 0)\n        .attr(\"id\", \"hourSlider\");\n\n    sliderContainer.append(\"span\")\n        .attr(\"id\", \"hourDisplay\")\n        .text(\"Hour: 0\");\n\n    const collisionTypeFilter = d3.select(\"#visualization\")\n        .append(\"select\")\n        .attr(\"id\", \"collisionTypeFilter\")\n        .style(\"position\", \"absolute\")\n        .style(\"bottom\", \"20px\")\n        .style(\"right\", \"20px\")\n        .style(\"display\", \"none\");\n\n    collisionTypeFilter.selectAll(\"option\")\n        .data([\"All Collisions\", \"Fatalities\", \"Bicycle Fatalities\", \"Pedestrian Fatalities\"])\n        .enter()\n        .append(\"option\")\n        .text(d => d)\n        .attr(\"value\", d => d);\n\n    // Draw roads\n    svg.selectAll(\"path.road\")\n        .data(phillyMap.features.filter(d => d.properties.highway))\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"road\")\n        .attr(\"d\", path)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", d => d.properties.highway === \"residential\" ? \"grey\" : \"black\")\n        .attr(\"stroke-width\", d => d.properties.highway === \"residential\" ? 0.5 : 2)\n        .style(\"opacity\", 0)\n        .transition()\n        .duration(2000)\n        .style(\"opacity\", 1);\n\n    let currentSlide = 0;\n    let crashData;\n\n    function filterDataByYear(year) {\n        return fullCrashData.filter(d => d.CRASH_YEAR === year);\n    }\n\n    function showSlide(slideIndex) {\n        currentSlide = slideIndex;\n        svg.selectAll(\".crash-point\").remove();\n        tooltip.style(\"opacity\", 0);\n        textOverlay.html(\"\");\n\n        sliderContainer.style(\"display\", slideIndex === 5 ? \"block\" : \"none\");\n        collisionTypeFilter.style(\"display\", slideIndex === 5 ? \"block\" : \"none\");\n\n        switch (slideIndex) {\n            case 0: showIntroScene(); break;\n            case 1: showAllCollisions(); break;\n            case 2: showFatalities(); break;\n            case 3: showBicycleFatalities(); break;\n            case 4: showPedestrianFatalities(); break;\n            case 5: showTimeAnalysis(); break;\n        }\n    }\n\n    function showIntroScene() {\n        const year = yearSelect.property(\"value\");\n        const totalFatalities = crashData.reduce((sum, d) => sum + (+d.FATAL_COUNT), 0);\n        const pedestrianFatalities = crashData.reduce((sum, d) => sum + (+d.PED_DEATH_COUNT), 0);\n        const bicycleFatalities = crashData.reduce((sum, d) => sum + (+d.BICYCLE_DEATH_COUNT), 0);\n        const otherFatalities = totalFatalities - pedestrianFatalities - bicycleFatalities;\n\n        let introText = `\n            <h2>Philadelphia's Traffic Safety Crisis in ${year}</h2>\n            <p>Philadelphia has one of the highest traffic death rates in the country, surpassing New York and Boston, and comparable to Los Angeles.</p>\n            <p>In ${year}, Philadelphia saw ${totalFatalities} traffic fatalities:</p>\n            <ul>\n                <li>${pedestrianFatalities} were pedestrians</li>\n                <li>${bicycleFatalities} were bicyclists</li>\n                <li>${otherFatalities} were other traffic fatalities</li>\n            </ul>\n        `;\n\n        if (year === \"2023\") {\n            introText += `<p>Source: <a href=\"https://www.phillyvoice.com/philly-vision-zero-2023-report-traffic-deaths-vehicle-crashes-pedestrians/\" target=\"_blank\">PhillyVoice</a></p>`;\n        }\n\n        introText += `\n            <br>\n            <p>Click through the following scenes to explore Philadelphia's traffic collision data.</p>\n            <p>Use the year dropdown at the top right to change the dataset.</p>\n            <p><strong>Click anywhere to begin your exploration.</strong></p>\n        `;\n\n        textOverlay.html(introText)\n            .transition()\n            .duration(1000)\n            .style(\"opacity\", 1);\n    }\n\n    function showAllCollisions() {\n        const year = yearSelect.property(\"value\");\n        const collisionCount = crashData.length;\n        textOverlay.html(`<h2>In ${year}, there were ${collisionCount} traffic collisions in Philadelphia</h2>`)\n            .transition()\n            .duration(1000)\n            .style(\"opacity\", 1);\n\n        createPoints(crashData, \"blue\", 2, 0.3);\n    }\n\n    function showFatalities() {\n        const year = yearSelect.property(\"value\");\n        const fatalCrashes = crashData.filter(d => +d.FATAL_COUNT > 0);\n        const fatalityCount = fatalCrashes.reduce((sum, d) => sum + (+d.FATAL_COUNT), 0);\n        textOverlay.html(`<h2>In ${year}, ${fatalityCount} people lost their lives in ${fatalCrashes.length} fatal collisions</h2>`)\n            .transition()\n            .duration(1000)\n            .style(\"opacity\", 1);\n\n        createPoints(fatalCrashes, \"red\", 4, 0.6);\n    }\n\n    function showBicycleFatalities() {\n        const year = yearSelect.property(\"value\");\n        const bicycleFatalities = crashData.filter(d => +d.BICYCLE_DEATH_COUNT > 0);\n        const bicycleFatalityCount = bicycleFatalities.reduce((sum, d) => sum + (+d.BICYCLE_DEATH_COUNT), 0);\n        textOverlay.html(`<h2>In ${year}, ${bicycleFatalityCount} bicycle fatalities occurred in Philadelphia</h2>`)\n            .transition()\n            .duration(1000)\n            .style(\"opacity\", 1);\n\n        createPoints(bicycleFatalities, \"orange\", 5, 0.8);\n    }\n\n    function showPedestrianFatalities() {\n        const year = yearSelect.property(\"value\");\n        const pedestrianFatalities = crashData.filter(d => +d.PED_DEATH_COUNT > 0);\n        const pedestrianFatalityCount = pedestrianFatalities.reduce((sum, d) => sum + (+d.PED_DEATH_COUNT), 0);\n        textOverlay.html(`<h2>In ${year}, ${pedestrianFatalityCount} pedestrian fatalities occurred in Philadelphia</h2>`)\n            .transition()\n            .duration(1000)\n            .style(\"opacity\", 1);\n\n        createPoints(pedestrianFatalities, \"purple\", 5, 0.8);\n    }\n\n    function showTimeAnalysis() {\n        const year = yearSelect.property(\"value\");\n        textOverlay.html(`\n            <h2>Analyze ${year} Crashes by Time of Day</h2>\n            <p>Use the slider below to explore how crashes occur throughout the day.</p>\n            <p>Change the collision type using the dropdown menu.</p>\n        `)\n        .transition()\n        .duration(1000)\n        .style(\"opacity\", 1);\n\n        updateVisualization();\n    }\n\n    function createPoints(data, color, radius, opacity, instant = false) {\n        let points = svg.selectAll(\".crash-point\")\n            .data(data)\n            .enter()\n            .append(\"circle\")\n            .attr(\"class\", \"crash-point\")\n            .attr(\"cx\", d => projection([+d.DEC_LONG, +d.DEC_LAT])[0])\n            .attr(\"cy\", d => projection([+d.DEC_LONG, +d.DEC_LAT])[1])\n            .attr(\"r\", radius)\n            .attr(\"fill\", color)\n            .on(\"mouseover\", showTooltip)\n            .on(\"mouseout\", hideTooltip);\n\n        if (instant) {\n            points.attr(\"opacity\", opacity);\n        } else {\n            points.attr(\"opacity\", 0)\n                .transition()\n                .duration(1000)\n                .attr(\"opacity\", opacity);\n        }\n    }\n\n    function showTooltip(event, d) {\n        d3.select(this).attr(\"r\", +this.getAttribute(\"r\") + 2);\n        tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n        tooltip.html(`Date: ${d.CRASH_MONTH}/${d.CRASH_YEAR}<br>\n            Time: ${d.HOUR_OF_DAY}:00<br>\n            Fatalities: ${d.FATAL_COUNT}<br>\n            Bicycle Fatalities: ${d.BICYCLE_DEATH_COUNT}<br>\n            Pedestrian Fatalities: ${d.PED_DEATH_COUNT}<br>\n            Injuries: ${d.INJURY_COUNT}`)\n            .style(\"left\", (event.pageX + 5) + \"px\")\n            .style(\"top\", (event.pageY - 28) + \"px\");\n    }\n\n    function hideTooltip() {\n        d3.select(this).attr(\"r\", this.getAttribute(\"r\"));\n        tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n    }\n\n    function updateVisualization() {\n        const hour = +d3.select(\"#hourSlider\").property(\"value\");\n        const collisionType = d3.select(\"#collisionTypeFilter\").property(\"value\");\n\n        let filteredData = crashData.filter(d => +d.HOUR_OF_DAY === hour);\n        if (collisionType === \"Fatalities\") {\n            filteredData = filteredData.filter(d => +d.FATAL_COUNT > 0);\n        } else if (collisionType === \"Bicycle Fatalities\") {\n            filteredData = filteredData.filter(d => +d.BICYCLE_DEATH_COUNT > 0);\n        } else if (collisionType === \"Pedestrian Fatalities\") {\n            filteredData = filteredData.filter(d => +d.PED_DEATH_COUNT > 0);\n        }\n\n        svg.selectAll(\".crash-point\").remove();\n        createPoints(filteredData, d => {\n            if (+d.BICYCLE_DEATH_COUNT > 0) return \"orange\";\n            if (+d.PED_DEATH_COUNT > 0) return \"purple\";\n            if (+d.FATAL_COUNT > 0) return \"red\";\n            return \"blue\";\n        }, 4, 0.6, true);\n\n        d3.select(\"#hourDisplay\").text(`Hour: ${hour}`);\n    }\n\n    // Event listeners\n    d3.select(\"#visualization\").on(\"click\", (event) => {\n        if (event.target.tagName !== \"SELECT\" && event.target.tagName !== \"INPUT\") {\n            currentSlide = (currentSlide + 1) % 6;  // Changed to 6 for the new total number of slides\n            showSlide(currentSlide);\n        }\n    });\n\n    d3.select(\"#hourSlider\").on(\"input\", updateVisualization);\n    d3.select(\"#collisionTypeFilter\").on(\"change\", updateVisualization);\n\n    // Year selection\n    const years = [...new Set(fullCrashData.map(d => d.CRASH_YEAR))].sort();\n    const yearSelect = d3.select(\"#visualization\")\n        .append(\"select\")\n        .attr(\"id\", \"yearSelect\")\n        .style(\"position\", \"absolute\")\n        .style(\"top\", \"10px\")\n        .style(\"right\", \"10px\");\n\n    yearSelect.selectAll(\"option\")\n        .data(years)\n        .enter()\n        .append(\"option\")\n        .text(d => d)\n        .attr(\"value\", d => d);\n\n    yearSelect.on(\"change\", function() {\n        crashData = filterDataByYear(this.value);\n        showSlide(currentSlide);\n    });\n\n    // Initialize\n    const mostRecentYear = years[years.length - 1];\n    yearSelect.property(\"value\", mostRecentYear);\n    crashData = filterDataByYear(mostRecentYear);\n    showSlide(0);\n});"],"names":["width","height","phillyMap","phillyCSV","fullCrashData","phillyCenter","projection","path","svg","event","tooltip","textOverlay","sliderContainer","collisionTypeFilter","d","currentSlide","crashData","filterDataByYear","year","showSlide","slideIndex","showIntroScene","showAllCollisions","showFatalities","showBicycleFatalities","showPedestrianFatalities","showTimeAnalysis","yearSelect","totalFatalities","sum","pedestrianFatalities","bicycleFatalities","otherFatalities","introText","collisionCount","createPoints","fatalCrashes","fatalityCount","bicycleFatalityCount","pedestrianFatalityCount","updateVisualization","data","color","radius","opacity","instant","points","showTooltip","hideTooltip","hour","collisionType","filteredData","years","mostRecentYear"],"mappings":"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"}